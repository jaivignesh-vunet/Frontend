name: Build Docker Image

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up environment variables
      run: |
        current_date=$(date +%Y%m%d)
        current_time=$(date +%H%M%S)
        echo "IMAGE_TAG=${current_date}-${current_time}" >> $GITHUB_ENV

    - name: Build the Docker image
      run: |
        docker login ghcr.io -u jaivignesh-vunet -p ${{ secrets.KUBE }}
        docker build . --file Dockerfile --tag ghcr.io/jaivignesh-vunet/frontend:${{ env.IMAGE_TAG }}
        docker push ghcr.io/jaivignesh-vunet/frontend:${{ env.IMAGE_TAG }}
        
    - name: Check MongoDB server availability
      run: ping -c 4 122.171.18.19


    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
          pip install pymongo

    - name: Run Python script
      run: |
          python -c '
          from pymongo import MongoClient
          import os
          import datetime

          def create_or_update_document(document):
              client = MongoClient("mongodb://122.171.18.19:27017/")
              db = client["kubernetes"]
              collection = db["frontend"]

              # Insert or update the document in the collection
              collection.update_one({}, {"$set": document}, upsert=True)

              client.close()

          def date(tag):
              date_string = tag
              formatted_date = datetime.datetime.strptime(date_string, "%Y%m%d-%H%M%S")
              formatted_date_only = formatted_date.strftime("%Y-%m-%d")
              return formatted_date_only


          def time2(tag):
              date_string = tag
              formatted_date = datetime.datetime.strptime(date_string, "%Y%m%d-%H%M%S")
              formatted_time_only = formatted_date.strftime("%H:%M:%S")
              return formatted_time_only


          #tag = "20230621-090801"
          tag = os.environ.get("IMAGE_TAG")
          print ("Apple")
          print (tag)

          document = {
              "image_name": "frontend",
              "tag": tag,
              "date created": date(tag),
              "time created": time2(tag),
              "pull command": "docker pull ghcr.io/jaivignesh-vunet/frontend:"+tag
          }

          create_or_update_document(document) '         
